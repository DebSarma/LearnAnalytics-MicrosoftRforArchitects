list.files()
hvac <- read.csv("HVAC.csv", header = T, stringsAsFactors = F)
building <- read.csv("building.csv", header = T, stringsAsFactors = F)
hvac <- read.csv("HVAC.csv", header = T, stringsAsFactors = F)
building <- read.csv("building.csv", header = T, stringsAsFactors = F)
head(hvac)
head(building)
hvac <- read.csv("HVAC.csv", header = T, stringsAsFactors = F)
building <- read.csv("building.csv", header = T, stringsAsFactors = F)
head(hvac)
head(building)
summary(building)
summary(hvac)
summary(hvac)
summary(building)
summary(building)
summary(hvac)
table(building$BuildingMgr)
hvac <- read.csv("HVAC.csv", header = T, stringsAsFactors = F)
building <- read.csv("building.csv", header = T, stringsAsFactors = F)
head(hvac)
head(building)
hvac <- read.csv("HVAC.csv", header = T, stringsAsFactors = F)
building <- read.csv("building.csv", header = T, stringsAsFactors = F)
head(hvac)
head(building)
dim(hvac)
dim(building)
build_fctrs <- c("BuildingID", "Country")
lapply(building[build_fctrs], as.factor)
hvac$BuildingID <- as.factor(hvac$BuildingID)
summary(hvac)
summary(building)
str(building)
build_fctrs <- c("BuildingID", "Country")
lapply(building[build_fctrs], as.factor)
hvac$BuildingID <- as.factor(hvac$BuildingID)
summary(hvac)
summary(building)
build_fctrs <- c("BuildingID", "Country")
buildings[build_fctrs] <- lapply(building[build_fctrs], as.factor)
hvac$BuildingID <- as.factor(hvac$BuildingID)
summary(hvac)
summary(building)
buildings[build_fctrs] <- lapply(building[build_fctrs], as.factor)
build_fctrs <- c("BuildingID", "Country")
building[build_fctrs] <- lapply(building[build_fctrs], as.factor)
hvac$BuildingID <- as.factor(hvac$BuildingID)
summary(hvac)
summary(building)
hvac$Date <- as.Date(hvac$Date, format = "%m/%d/%y %HH:%MM:%SS")
head(hvac)
hvac <- read.csv("HVAC.csv", header = T, stringsAsFactors = F)
building <- read.csv("building.csv", header = T, stringsAsFactors = F)
head(hvac)
head(building)
dim(hvac)
dim(building)
summary(building)
summary(hvac)
build_fctrs <- c("BuildingID", "Country")
building[build_fctrs] <- lapply(building[build_fctrs], as.factor)
hvac$BuildingID <- as.factor(hvac$BuildingID)
summary(hvac)
summary(building)
head(hvac)
hvac$Date[1]
as.Date(hvac$Date[1], "%m/%d/%y")
as.POSIXct(hvac$Time[1], "%HH:%MM:%SS")
as.POSIXct(hvac$Time[1], "%H:%M:%S")
as.POSIXct(paste(hvac$Date[1], hvac$Time[1]), "%m/%d/%y %H:%M:%S")
as.POSIXct(, "%m/%d/%y %H:%M:%S")
as.POSIXct(paste(hvac$Date[1], hvac$Time[1], sep = " "), "%m/%d/%y %H:%M:%S")
paste(hvac$Date[1], hvac$Time[1], sep = " ")
as.POSIXct(paste(hvac$Date[1], hvac$Time[1], sep = " "), "%m/%d/%y %HH:%MM:%SS")
as.POSIXct(paste(hvac$Date[1], hvac$Time[1], sep = " "), "%m/%d/%y %H:%M:%S")
warnings()
paste(hvac$Date[1], hvac$Time[1], sep = " ")
as.POSIXct(paste(hvac$Date[1], hvac$Time[1], sep = " "), "%m/%d/%y %H:%M:%S")
as.Date(paste(hvac$Date[1], hvac$Time[1], sep = " "), "%m/%d/%y %H:%M:%S")
as.POSIXlt(paste(hvac$Date[1], hvac$Time[1], sep = " "), "%m/%d/%y %H:%M:%S")
as.POSIXct(paste(hvac$Date[1], hvac$Time[1], sep = " "), "%m/%d/%y %H:%M:%S")
paste(hvac$Date[1], hvac$Time[1], sep = " ")
paste(hvac$Date[1], hvac$Time[1], sep = " ")
as.Date(paste(hvac$Date[1], hvac$Time[1], sep = " "), "%m/%d/%y %H:%M:%S")
as.POSIXct.date(paste(hvac$Date[1], hvac$Time[1], sep = " "), "%m/%d/%y %H:%M:%S")
as.POSIXct(paste(hvac$Date[1], hvac$Time[1], sep = " "), "%m/%d/%y %H:%M:%S")
as.POSIXct(paste(hvac$Date[1], hvac$Time[1], sep = " "), format = "%m/%d/%y %H:%M:%S")
head(hvac)
hvac$Date_Time <- as.POSIXct(paste(hvac$Date,
hvac$Time, sep = " "),
format = "%m/%d/%y %H:%M:%S")
hvac$Date <- as.Date(hvac$Date)
hvac$Time <- strftime(hvac$Date_Time, format = "%H:M:%S")
head(hvac)
as.POSIXct(paste(hvac$Date[1], hvac$Time[1], sep = " "), format = "%m/%d/%y %H:%M:%S")
hvac <- read.csv("HVAC.csv", header = T, stringsAsFactors = F)
building <- read.csv("building.csv", header = T, stringsAsFactors = F)
head(hvac)
head(building)
dim(hvac)
dim(building)
paste(hvac$Date[1], hvac$Time[1], sep = " ")
as.POSIXct(paste(hvac$Date[1], hvac$Time[1], sep = " "), format = "%m/%d/%y %H:%M:%S")
head(hvac)
hvac$Date_Time <- as.POSIXct(paste(hvac$Date,
hvac$Time, sep = " "),
format = "%m/%d/%y %H:%M:%S")
hvac$Date <- as.Date(hvac$Date)
hvac$Time <- strftime(hvac$Date_Time, format = "%H:M:%S")
head(hvac)
hvac <- read.csv("HVAC.csv", header = T, stringsAsFactors = F)
building <- read.csv("building.csv", header = T, stringsAsFactors = F)
head(hvac)
head(building)
dim(hvac)
dim(building)
as.POSIXct(paste(hvac$Date[1], hvac$Time[1], sep = " "), format = "%m/%d/%y %H:%M:%S")
as.POSIXct(paste(hvac$Date, hvac$Time, sep = " "), format = "%m/%d/%y %H:%M:%S")[1]
head(hvac)
hvac$Date_Time <- as.POSIXct(paste(hvac$Date,
hvac$Time, sep = " "),
format = "%m/%d/%y %H:%M:%S")
hvac$Date <- as.Date(hvac$Date_Time)
hvac$Time <- strftime(hvac$Date_Time, format = "%H:M:%S")
head(hvac)
hvac <- read.csv("HVAC.csv", header = T, stringsAsFactors = F)
building <- read.csv("building.csv", header = T, stringsAsFactors = F)
head(hvac)
head(building)
dim(hvac)
dim(building)
summary(building)
summary(hvac)
build_fctrs <- c("BuildingID", "Country")
building[build_fctrs] <- lapply(building[build_fctrs], as.factor)
hvac$BuildingID <- as.factor(hvac$BuildingID)
summary(hvac)
summary(building)
head(hvac)
hvac$Date_Time <- as.POSIXct(paste(hvac$Date,
hvac$Time, sep = " "),
format = "%m/%d/%y %H:%M:%S")
hvac$Date <- as.Date(hvac$Date_Time)
hvac$Time <- strftime(hvac$Date_Time, format = "%H:M:%S")
head(hvac)
hvac <- read.csv("HVAC.csv", header = T, stringsAsFactors = F)
building <- read.csv("building.csv", header = T, stringsAsFactors = F)
head(hvac)
head(building)
dim(hvac)
dim(building)
build_fctrs <- c("BuildingID", "Country")
building[build_fctrs] <- lapply(building[build_fctrs], as.factor)
hvac$BuildingID <- as.factor(hvac$BuildingID)
summary(hvac)
summary(building)
head(hvac)
hvac$Date_Time <- as.POSIXct(paste(hvac$Date,
hvac$Time, sep = " "),
format = "%m/%d/%y %H:%M:%S")
hvac$Date <- as.Date(hvac$Date_Time)
hvac$Time <- strftime(hvac$Date_Time, format = "%H:%M:%S")
head(hvac)
build_temps <- merge(building, hvac, by = "BuildingID")
head(build_temps)
ggplot(build_temps, aes(x = "Date_Time", y = "ActualTemp")) + geom_path() + facet_wrap(~BuildingID)
library(ggplot2)
ggplot(build_temps, aes(x = "Date_Time", y = "ActualTemp")) + geom_path() + facet_wrap(~BuildingID)
ls()
head(build_temps)
ggplot(build_temps, aes(x = Date_Time, y = ActualTemp)) + geom_path() + facet_wrap(~BuildingID)
subset(build_temps, Date = "2013-06-06")
View(subset(build_temps, Date = "2013-06-06"))
View(subset(build_temps, Date == "2013-06-06"))
ggplot(build_temps, aes(x = Date_Time, y = ActualTemp)) + geom_path() + facet_wrap(BuildingID ~ BuildingMgr)
ggplot(build_temps, aes(x = Date_Time, y = ActualTemp)) + geom_path() + facet_wrap(BuildingID ~ HVACproduct)
ggplot(build_temps, aes(x = Date, y = ActualTemp)) + geom_path() + facet_wrap(BuildingID ~ HVACproduct)
head(build_temps)
build_temps$DiffTemp <- with(build_temps, ActualTemp - TargetTemp)
build_temps$DiffTemp <- with(build_temps, ActualTemp - TargetTemp)
ggplot(build_temps, aes(x = BuildingID, y = DiffTemp)) + geom_boxplot()
ggplot(build_temps, aes(x = BuildingID, y = DiffTemp)) + geom_boxplot() + facet_wrap(~Country)
ggplot(build_temps, aes(x = BuildingID, y = DiffTemp, fill = BuildingID)) + geom_boxplot()
ggplot(build_temps, aes(x = BuildingID, y = DiffTemp, fill = BuildingID)) + geom_boxplot() + theme(guides = F)
ggplot(build_temps, aes(x = BuildingID, y = DiffTemp, fill = BuildingID)) + geom_boxplot() + guides(fill = F)
ggplot(build_temps, aes(x = Country, y = DiffTemp, fill = BuildingID)) + geom_boxplot() + guides(fill = F) + theme_bw()
ggplot(build_temps, aes(x = Country, y = DiffTemp, fill = Country)) + geom_boxplot() + guides(fill = F) + theme_bw()
ggplot(build_temps, aes(x = Country, y = DiffTemp, fill = Country)) + geom_boxplot() + guides(fill = F) + theme_bw() + theme(axis.text.x = element_text(angle = 90, hjust = 1))
head(build_temps)
ggplot(build_temps, aes(x = HVACproduct, y = DiffTemp, fill = HVACproduct)) + geom_boxplot() + guides(fill = F) + theme_bw() + theme(axis.text.x = element_text(angle = 90, hjust = 1))
format(build_temps$Date, "%b")
ggplot(build_temps, aes(x = Country, y = DiffTemp, fill = Country)) + geom_boxplot() + guides(fill = F) + theme_bw() + theme(axis.text.x = element_text(angle = 90, hjust = 1)) + facet_wrap(~format(Date, "%b"))
build_temps$Month <- format(build_temps$Date, "%b")
ggplot(build_temps, aes(x = Country, y = DiffTemp, fill = Country)) + geom_boxplot() + guides(fill = F) + theme_bw() + theme(axis.text.x = element_text(angle = 90, hjust = 1)) + facet_wrap(~Month)
table(format(build_temps$Date, "%Y"))
head(build_temps)
build_temps <- build_temps %>% mutate(TempExcursion = ifelse(DiffTemp > 0, "Excursion", "Within Limits"))
library(dplyr)
build_temps <- build_temps %>% mutate(TempExcursion = ifelse(DiffTemp > 0, "Excursion", "Within Limits"))
head(build_temps)
excursions <- build_temps %>% group_by(TempExcursion, BuildingID) %>% summarize(Count = n())
excursions %>% head
excursions %>% ggplot(aes(x = BuildingID, y = Count, fill = TempExcursion)) + geom_bar(stat = 'identity', position = 'dodge')
excursions %>% ggplot(aes(x = BuildingID, y = Count, fill = TempExcursion)) + geom_bar(stat = 'identity', position = 'dodge') + theme_bw()
excursions %>% ggplot(aes(x = BuildingID, y = Count, fill = TempExcursion)) + geom_bar(stat = 'identity', position = 'stacked') + theme_bw()
excursions %>% ggplot(aes(x = BuildingID, y = Count, fill = TempExcursion)) + geom_bar(stat = 'identity', position = 'stack') + theme_bw()
library(dplyr)
build_temps <- build_temps %>% mutate(TempExcursion = ifelse(DiffTemp > 0, "Excursion", "Within Limits"))
excursions <- build_temps %>% group_by(TempExcursion, BuildingID) %>% summarize(Count = n())
ggplot(excursions, aes(x = BuildingID, y = Count, fill = TempExcursion)) + geom_bar(stat = 'identity', position = 'stack') + theme_bw()
hed(build_temps)
head(build_temps)
range(build_temps$Date)
build_temps$SplitValue <- ifelse(build_temps$Date > "2013-06-15", "Test", "Train")
split_df <- split(build_temps, build_temps$SplitValue)
lapply(split_df, dim)
range(build_temps$Date)
build_temps$SplitValue <- ifelse(build_temps$Date > "2013-06-15", "Test", "Train")
split_df <- split(build_temps, build_temps$SplitValue)
lapply(split_df, dim)
lapply(split_df, range(.$Date))
lapply(split_df, function(x) range(x$Date))
head(build_temps)
temp_formula <- TempExcursion ~ BuildingID + BuildingMgr + BuildingAge + HVACproduct + Country + Time + System + SystemAge
names(split_df)
range(build_temps$Date)
build_temps$SplitValue <- ifelse(build_temps$Date > "2013-06-15", "Test", "Train")
split_df <- split(build_temps, build_temps$SplitValue)
names(split_df)
lapply(split_df, dim)
lapply(split_df, function(x) range(x$Date))
temp_formula <- TempExcursion ~ BuildingID + BuildingMgr + BuildingAge + HVACproduct + Country + Time + System + SystemAge
train_model <- glm(temp_formula, family = 'binomial', data = split_df[["Train"]])
library(dplyr)
build_temps <- build_temps %>% mutate(TempExcursion = ifelse(DiffTemp > 0, "Excursion", "Within Limits"), TempFlag = ifelse(DiffTemp > 0, 1, 0))
excursions <- build_temps %>% group_by(TempExcursion, BuildingID) %>% summarize(Count = n())
ggplot(excursions, aes(x = BuildingID, y = Count, fill = TempExcursion)) + geom_bar(stat = 'identity', position = 'stack') + theme_bw()
temp_formula <- TempFlag ~ BuildingID + BuildingMgr + BuildingAge + HVACproduct + Country + Time + System + SystemAge
train_model <- glm(temp_formula, family = 'binomial', data = split_df[["Train"]])
range(build_temps$Date)
build_temps$SplitValue <- ifelse(build_temps$Date > "2013-06-15", "Test", "Train")
split_df <- split(build_temps, build_temps$SplitValue)
names(split_df)
lapply(split_df, dim)
lapply(split_df, function(x) range(x$Date))
temp_formula <- TempFlag ~ BuildingID + BuildingMgr + BuildingAge + HVACproduct + Country + Time + System + SystemAge
train_model <- glm(temp_formula, family = 'binomial', data = split_df[["Train"]])
plot(train_model)
ggplot(split_df[["Train"]], aes(x = Time, y = TempFlag)) + geom_point()jitter()
ggplot(split_df[["Train"]], aes(x = Time, y = TempFlag)) + geom_point()
ggplot(split_df[["Train"]], aes(x = Time, y = TargetTemp)) + geom_point()
ggplot(split_df[["Train"]], aes(x = TargetTemp, y = TempFlag)) + geom_point()
predictions <- predict(train_model, newdata = split_df[["Test"]])
head(predictions)
length(predictions)
summary(predictions)
predictions <- predict(train_model, newdata = split_df[["Test"]],
type = 'response)
predictions <- predict(train_model, newdata = split_df[["Test"]],
type = 'response')
predictions <- predict(train_model, newdata = split_df[["Test"]],
type = 'response')
summary(predictions)
library(pROC)
install.packages('pROC')
?pROC
library(pROC)
?pROC
roc(split_df[["Test"]]$TempFlag, predictions)
plot(roc(split_df[["Test"]]$TempFlag, predictions))
auc(roc(split_df[["Test"]]$TempFlag, predictions))
library(pROC)
roc_curve <- roc(split_df[["Test"]]$TempFlag, predictions)
auc_value <- auc(roc_curve)
head(roc_curve)
str(roc_curve)
library(pROC)
roc_curve <- roc(split_df[["Test"]]$TempFlag, predictions)
auc_value <- auc(roc_curve)
auc_value
plot(roc_curve)
knitr::purl("eda.Rmd")
